REPORTING(5)                                                      REPORTING(5)



NNAAMMEE
       reporting - Univa Grid Engine reporting file format

DDEESSCCRRIIPPTTIIOONN
       A   Univa   Grid   Engine   system   writes   a   reporting   file   to
       $SGE_ROOT/default/common/reporting.  The reporting file  contains  data
       that  can be used for accounting, monitoring and analysis purposes.  It
       contains information about the cluster  (hosts,  queues,  load  values,
       consumables,  etc.),  about  the  jobs running in the cluster and about
       sharetree configuration and usage.  All information  is  time  related,
       events are dumped to the reporting file in a configurable interval.  It
       allows to monitor a "real time" status of the cluster as well  as  his-
       torical analysis.

FFOORRMMAATT
       The  reporting  file  is an ASCII file.  Each line contains one record,
       and the fields of a record are  separated  by  a  delimiter  (:).   The
       reporting file contains records of different type. Each record type has
       a specific record structure.

       The first two fields are common to all reporting records:

       ttiimmee   Time (64bit GMT unix timestamp in milliseconds) when the  record
              was created.

       rreeccoorrdd ttyyppee
              Type  of  the accounting record.  The different types of records
              and their structure are described in the following text.

   nneeww__jjoobb
       The new_job record is written whenever a  new  job  enters  the  system
       (usually by a submitting command). It has the following fields:

       ssuubbmmiissssiioonn__ttiimmee
              Time  (64bit  GMT  unix time stamp in milliseconds) when the job
              was submitted.

       jjoobb__nnuummbbeerr
              The job number.

       ttaasskk__nnuummbbeerr
              The array task id. Always has the value -1 for  new_job  records
              (as we don't have array tasks yet).

       ppee__ttaasskkiidd
              The  task  id of parallel tasks. Always has the value "none" for
              new_job records.

       jjoobb__nnaammee
              The job name (from -N submission option)

       oowwnneerr  The job owner.

       ggrroouupp  The unix group of the job owner.

       pprroojjeecctt
              The project the job is running in.

       ddeeppaarrttmmeenntt
              The department the job owner is in.

       aaccccoouunntt
              The account string specified for the  job  (from  -A  submission
              option).

       pprriioorriittyy
              The job priority (from -p submission option).

       jjoobb__ccllaassss
              If  the job has been submitted into a job class, the name of the
              job class, otherwise "" .

       ssuubbmmiitt__hhoosstt
              The submit host name.

   ssuubbmmiitt__ccmmdd
       The command line used for job submission.  As the delimiter used by the
       reporting  file  (colon ":") can be part of the command line all colons
       in the command line are replaced by ASCII code 255.  When  reading  the
       reporting file characters with ASCII code 255 have to be converted back
       to colon.  Line feeds being part of the command line will  be  replaced
       by  a  space  character.  For jobs submitted via the DRMAA interface or
       via qmon graphical user interface the reporting file contains "NONE" as
       submit_cmd.

   jjoobb__lloogg
       The  job_log  record  is  written whenever a job, an array task or a pe
       tasks is changing status. A status change can be  the  transition  from
       pending to running, but can also be triggered by user actions like sus-
       pension of a job.  It has the following fields:

       eevveenntt__ttiimmee
              Time (64bit GMT unix time stamp in milliseconds) when the  event
              was generated.

       eevveenntt  A one word description of the event.

       jjoobb__nnuummbbeerr
              The job number.

       ttaasskk__nnuummbbeerr
              The  array  task id. Always has the value -1 for new_job records
              (as we don't have array tasks yet).

       ppee__ttaasskkiidd
              The task id of parallel tasks. Always has the value  "none"  for
              new_job records.

       ssttaattee  The state of the job after the event was processed.

       uusseerr   The  user  who  initiated the event (or special usernames "qmas-
              ter", "scheduler" and "execd" for actions of the  system  itself
              like scheduling jobs, executing jobs etc.).

       hhoosstt   The  host  from  which the action was initiated (e.g. the submit
              host, the qmaster host, etc.).

       ssttaattee__ttiimmee
              Reserved field for later use.

       pprriioorriittyy
              The job priority (from -p submission option).

       ssuubbmmiissssiioonn__ttiimmee
              Time (64bit GMT unix time stamp in milliseconds)  when  the  job
              was submitted.

       jjoobb__nnaammee
              The job name (from -N submission option)

       oowwnneerr  The job owner.

       ggrroouupp  The unix group of the job owner.

       pprroojjeecctt
              The project the job is running in.

       ddeeppaarrttmmeenntt
              The department the job owner is in.

       aaccccoouunntt
              The  account  string  specified  for the job (from -A submission
              option).

       jjoobb__ccllaassss
              If the job has been submitted into a job class, the name of  the
              job class, otherwise "" .

       mmeessssaaggee
              A message describing the reported action.

   oonnlliinnee__uussaaggee
       Online  usage  records are written per array task or pe task of running
       jobs if online usage reporting is configured in the global cluster con-
       figuration,  see  also  _s_g_e___c_o_n_f(5) or per job via the _-_r_o_u option, see
       also _s_u_b_m_i_t(1).  An online usage record contains the following fields:

       rreeppoorrtt__ttiimmee
              Time (64bit GMT unix time stamp in milliseconds) when the  usage
              values were generated by sge_execd.

       jjoobb__nnuummbbeerr
              The job number.

       ttaasskk__nnuummbbeerr
              The array task id.

       ppee__ttaasskkiidd
              The task id of parallel tasks.

       uussaaggee  Comma separated list of name=value tuples.

   aacccctt
       Records of type acct are accounting records. Normally, they are written
       whenever a job, a task of an array job, or the task of a  parallel  job
       terminates.  However, for long running jobs an intermediate acct record
       is created once a day  after  a  midnight.  This  results  in  multiple
       accounting  records  for a particular job and allows for a fine-grained
       resource usage monitoring over time.  Accounting records  comprise  the
       following fields:

       qqnnaammee  Name of the cluster queue in which the job has run.

       hhoossttnnaammee
              Name of the execution host.

       ggrroouupp  The  effective group id of the job owner when executing the job.

       oowwnneerr  Owner of the Univa Grid Engine job.

       jjoobb__nnaammee
              Job name.

       jjoobb__nnuummbbeerr
              Job identifier - job number.

       aaccccoouunntt
              An account string as specified by the _q_s_u_b(1)  or  _q_a_l_t_e_r(1)  --AA
              option.

       pprriioorriittyy
              Priority value assigned to the job corresponding to the pprriioorriittyy
              parameter in the queue configuration (see _q_u_e_u_e___c_o_n_f(5)).

       ssuubbmmiissssiioonn__ttiimmee
              Submission time (64bit GMT unix time stamp in milliseconds).

       ssttaarrtt__ttiimmee
              Start time (64bit GMT unix time stamp in milliseconds).

       eenndd__ttiimmee
              End time (64bit GMT unix time stamp in milliseconds).

       ffaaiilleedd Indicates the problem which occurred in case a job could not  be
              started on the execution host (e.g. because the owner of the job
              did not have a valid account on that  machine).  If  Univa  Grid
              Engine  tries  to  start  a job multiple times, this may lead to
              multiple entries in the accounting  file  corresponding  to  the
              same job ID.

       eexxiitt__ssttaattuuss
              Exit  status  of  the  job script (or Univa Grid Engine specific
              status in case of certain error conditions).

       rruu__wwaallllcclloocckk
              Difference between eenndd__ttiimmee and ssttaarrtt__ttiimmee (see above).

       The remainder of the accounting entries follows  the  contents  of  the
       standard UNIX rusage structure as described in _g_e_t_r_u_s_a_g_e(2).  Depending
       on the operating system where the job was executed some of  the  fields
       may be 0.  The following entries are provided:

              rruu__uuttiimmee
              rruu__ssttiimmee
              rruu__mmaaxxrrssss
              rruu__iixxrrssss
              rruu__iissmmrrssss
              rruu__iiddrrssss
              rruu__iissrrssss
              rruu__mmiinnfflltt
              rruu__mmaajjfflltt
              rruu__nnsswwaapp
              rruu__iinnbblloocckk
              rruu__oouubblloocckk
              rruu__mmssggssnndd
              rruu__mmssggrrccvv
              rruu__nnssiiggnnaallss
              rruu__nnvvccssww
              rruu__nniivvccssww



       pprroojjeecctt
              The project which was assigned to the job.

       ddeeppaarrttmmeenntt
              The department which was assigned to the job.

       ggrraanntteedd__ppee
              The parallel environment which was selected for that job.

       sslloottss  The  number  of  slots  which  were dispatched to the job by the
              scheduler.

       ttaasskk__nnuummbbeerr
              Array job task index number.

       ccppuu    The cpu time usage in seconds.

       mmeemm    The integral memory usage in Gbytes seconds.

       iioo     The amount of data transferred in Gbytes.  On Linux data  trans-
              ferred  means  all bytes read and written by the job through the
              read(), pread(), write() and pwrite() systems calls.

       ccaatteeggoorryy
              A string specifying the job category.

       iiooww    The io wait time in seconds.

       iiooooppss  The number of io operations.

       ppee__ttaasskkiidd
              If this identifier is set the task was part of  a  parallel  job
              and was passed to Univa Grid Engine via the qrsh -inherit inter-
              face.

       mmaaxxvvmmeemm
              The maximum vmem size in bytes.

       aarriidd   Advance reservation identifier. If the job used resources of  an
              advance  reservation then this field contains a positive integer
              identifier otherwise the value is "00" .

       aarr__ssuubbmmiissssiioonn__ttiimmee
              If the job used resources of an advance  reservation  then  this
              field contains the submission time (64bit GMT unix time stamp in
              milliseconds) of the advance reservation, otherwise the value is
              "00" .

       jjoobb__ccllaassss
              If  the job has been running in a job class, the name of the job
              class, otherwise "NNOONNEE" .

       qqddeell__iinnffoo
              If the job (the array task) has been deleted via  qdel,  "<<uusseerr--
              nnaammee>>@@<<hhoossttnnaammee>>",  else  "NNOONNEE".   If  qdel was called multiple
              times, every invocation is recorded in a comma separated list.

       mmaaxxrrssss The maximum resident set size in bytes.

       mmaaxxppssss The maximum proportional set size in bytes.

       ssuubbmmiitt__hhoosstt
              The submit host name.

       ccwwdd    The working directory the job ran in as specified  with  qsub  /
              qalter  switches  -cwd  and  -wd.   As the delimiter used by the
              accounting file (colon ":") can be part of the working directory
              all  colons  in the working directory are replaced by ASCII code
              255.

       ssuubbmmiitt__ccmmdd
              The command line used for job submission.  As the delimiter used
              by  the  reporting  file  (colon ":") can be part of the command
              line all colons in the command line are replaced by  ASCII  code
              255.  When reading the reporting file characters with ASCII code
              255 have to be converted back to colon.  Line feeds  being  part
              of  the command line will be replaced by a space character.  For
              jobs submitted via the DRMAA interface  or  via  qmon  graphical
              user interface the reporting file contains "NONE" as submit_cmd.

       wwaallllcclloocckk
              The wallclock time the job spent in running state.  Times during
              which  the  job was suspended are not counted as wallclock time.
              For loosely integrated jobs and for tightly integrated jobs with
              accounting  summary  enabled the wallclock time reported for the
              master task is the wallclock time multiplied by  the  number  of
              job slots.

   qquueeuuee
       Records  of  type  queue  contain  state  information for queues (queue
       instances).  A queue record has the following fields:

       qqnnaammee  The cluster queue name.

       hhoossttnnaammee
              The hostname of a specific queue instance.

       rreeppoorrtt__ttiimmee
              The time (64bit GMT unix time  stamp  in  milliseconds)  when  a
              state change was triggered.

       ssttaattee  The new queue state.

   qquueeuuee__ccoonnssuummaabbllee
       A  queue_consumable  record contains information about queue consumable
       values in addition to queue state information:

       qqnnaammee  The cluster queue name.

       hhoossttnnaammee
              The hostname of a specific queue instance.

       rreeppoorrtt__ttiimmee
              The time (64bit GMT unix time  stamp  in  milliseconds)  when  a
              state change was triggered.

       ssttaattee  The new queue state.

       ccoonnssuummaabblleess
              Description  of  consumable  values.  Information about multiple
              consumables is separated by space.  A consumable description has
              the format <name>=<actual_value>=<configured value>.

   hhoosstt
       A  host  record  contains information about hosts and host load values.
       It contains the following information:

       hhoossttnnaammee
              The name of the host.

       rreeppoorrtt__ttiimmee
              The time (64bit GMT unix time stamp in  milliseconds)  when  the
              reported information was generated.

       ssttaattee  The  new host state.  Currently, Univa Grid Engine doesn't track
              a host state, the field is reserved for future use. Always  con-
              tains the value X.

       llooaadd vvaalluueess
              Description of load values. Information about multiple load val-
              ues is separated by space.  A load  value  description  has  the
              format <name>=<actual_value>.

   hhoosstt__ccoonnssuummaabbllee
       A host_consumable record contains information about hosts and host con-
       sumables.  Host consumables can for example be licenses.   It  contains
       the following information:

       hhoossttnnaammee
              The name of the host.

       rreeppoorrtt__ttiimmee
              The  time  (64bit  GMT unix time stamp in milliseconds) when the
              reported information was generated.

       ssttaattee  The new host state.  Currently, Univa Grid Engine doesn't  track
              a  host state, the field is reserved for future use. Always con-
              tains the value X.

       ccoonnssuummaabblleess
              Description of consumable  values.  Information  about  multiple
              consumables is separated by space.  A consumable description has
              the format <name>=<actual_value>=<configured value>.

   sshhaarreelloogg
       The Univa Grid Engine qmaster can dump information about sharetree con-
       figuration  and use to the reporting file.  The parameter _s_h_a_r_e_l_o_g sets
       an interval in which sharetree information will be dumped.  It  is  set
       in  the  format HH:MM:SS. A value of 00:00:00 configures qmaster not to
       dump sharetree information. Intervals of several minutes  up  to  hours
       are  sensible  values for this parameter.  The record contains the fol-
       lowing fields

       ccuurrrreenntt ttiimmee
              The present time

       uussaaggee ttiimmee
              The  time used so far

       nnooddee nnaammee
              The node name

       uusseerr nnaammee
              The user name

       pprroojjeecctt nnaammee
              The project name

       sshhaarreess The total shares

       jjoobb ccoouunntt
              The job  count

       lleevveell  The percentage of shares used

       ttoottaall  The adjusted percentage of shares used

       lloonngg ttaarrggeett sshhaarree
              The long target percentage of resource shares used

       sshhoorrtt ttaarrggeett sshhaarree
              The short target percentage of resource shares used

       aaccttuuaall sshhaarree
              The actual percentage of resource shares used

       uussaaggee  The combined shares used

       ccppuu    The cpu used

       mmeemm    The memory used

       iioo     The IO used

       lloonngg ttaarrggeett ccppuu
              The long target cpu used

       lloonngg ttaarrggeett mmeemm
              The long target memory used

       lloonngg ttaarrggeett iioo
              The long target IO used

   nneeww__aarr
       A new_ar record contains information about advance reservation objects.
       Entries  of  this  type  will  be  added  if  an advance reservation is
       created.  It contains the following information:

       ssuubbmmiissssiioonn__ttiimmee
              The time (64bit GMT unix time stamp in  milliseconds)  when  the
              advance reservation was created.

       aarr__nnuummbbeerr
              The advance reservation number identifying the reservation.

       aarr__oowwnneerr
              The owner of the advance reservation.

   aarr__aattttrriibbuuttee
       The  ar_attribute  record is written whenever a new advance reservation
       was added or the attribute  of  an  existing  advance  reservation  has
       changed. It has following fields.

       eevveenntt__ttiimmee
              The  time  (64bit  GMT unix time stamp in milliseconds) when the
              event was generated.

       ssuubbmmiissssiioonn__ttiimmee
              The time (64bit GMT unix time stamp in  milliseconds)  when  the
              advance reservation was created.

       aarr__nnuummbbeerr
              The advance reservation number identifying the reservation.

       aarr__nnaammee
              Name of the advance reservation.

       aarr__aaccccoouunntt
              An account string which was specified during the creation of the
              advance reservation.

       aarr__ssttaarrtt__ttiimmee
              Start time.

       aarr__eenndd__ttiimmee
              End time.

       aarr__ggrraanntteedd__ppee
              The parallel environment  which  was  selected  for  an  advance
              reservation.

       aarr__ggrraanntteedd__rreessoouurrcceess
              The  granted resources which were selected for an advance reser-
              vation.

   aarr__lloogg
       The ar_log record is written whenever a advance reservation is changing
       status.  A status change can be from pending to active, but can also be
       triggered by system events like host outage. It has following fields.

       aarr__ssttaattee__cchhaannggee__ttiimmee
              The time (64bit GMT unix time stamp in  milliseconds)  when  the
              event occurred which caused a state change.

       ssuubbmmiissssiioonn__ttiimmee
              The  time  (64bit  GMT unix time stamp in milliseconds) when the
              advance reservation was created.

       aarr__nnuummbbeerr
              The advance reservation number identifying the reservation.

       aarr__ssttaattee
              The new state.

       aarr__eevveenntt
              An event id identifying the event which caused the state change.

       aarr__mmeessssaaggee
              A message describing the event which caused the state change.

   aarr__aacccctt
       The  ar_acct records are accounting records which are written for every
       queue instance  whenever  a  advance  reservation  terminates.  Advance
       reservation accounting records comprise following fields.

       aarr__tteerrmmiinnaattiioonn__ttiimmee
              The  time  (64bit  GMT unix time stamp in milliseconds) when the
              advance reservation terminated.

       ssuubbmmiissssiioonn__ttiimmee
              The time (64bit GMT unix time stamp in  milliseconds)  when  the
              advance reservation was created.

       aarr__nnuummbbeerr
              The advance reservation number identifying the reservation.

       aarr__qqnnaammee
              Cluster queue name which the advance reservation reserved.

       aarr__hhoossttnnaammee
              The name of the execution host.

       aarr__sslloottss
              The number of slots which were reserved.

SSEEEE AALLSSOO
       _s_g_e___c_o_n_f(5).  _h_o_s_t___c_o_n_f(5).

CCOOPPYYRRIIGGHHTT
       See _s_g_e___i_n_t_r_o(1) for a full statement of rights and permissions.



Univa Grid Engine File Formats     UGE 8.4.4                      REPORTING(5)
