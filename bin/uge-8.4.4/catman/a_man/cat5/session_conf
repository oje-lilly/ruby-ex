SESSION_CONF(5)                                                SESSION_CONF(5)



NNAAMMEE
       session_conf - Univa Grid Engine session configuration

DDEESSCCRRIIPPTTIIOONN
       When  Univa Grid Engine client commands interact with Univa Grid Engine
       server components (see _s_g_e___q_m_a_s_t_e_r(1)) then this is done  by  using  an
       interface  named  GDI  (Grid Engine Data Interface).  This interface is
       used to send client requests to the Univa Grid Engine system  that  are
       then  handled  within  the  server component and answered by a response
       message that contains the result for the client request.

       This GDI interface is also used for internal Univa Grid Engine communi-
       cation between components running on execution hosts (see _s_g_e___e_x_e_c_d(1))
       as well as for internal communication  between  components  within  the
       _s_g_e___m_a_s_t_e_r(1) component itself.

       GDI  requests  can  be  divided into two categories: Requests that will
       change the configuration/state of the Univa Grid Engine  system  (read-
       write-requests)  and  requests  that will gather information to display
       the configuration/state of the Univa  Grid  Engine  system  (read-only-
       requests).

       Univa  Grid  Engine 8.2 has been redesigned so that read-write-requests
       and read-only-requests can be executed  completely  independently  from
       each other.  Furthermore up to 64 read-only requests can work in paral-
       lel which is not possible in Sun Grid Engine, Oracle  Grid  Engine  and
       other open source versions of Grid Engine. This ensures faster response
       times for all requests and has a huge positive impact  on  the  cluster
       throughput.

       The  drawback of this approach is that GDI-read-only requests might not
       see the outcome of recently executed  read-write  requests  in  certain
       situations.  E.g.   it  might  happen  that a user submits a job (read-
       write-request) and  immediately  does  a  qstat  -j  <jid>  (read-only-
       request)  which  responds  with an error which says that the previously
       created job does not exist.

       In some cases such behavior may cause problems and it is  desired  that
       requests  should  be  executed in sequence and for this reason GDI ses-
       sions have been introduced that guarantee a consistent  view  onto  the
       Univa  Grid  Engine system. Internally read-only requests that are exe-
       cuted within the control of a session are delayed until  they  can  see
       all  changes that have happened previously within the same session. The
       maximum delay depends on the Univa Grid Engine system load and the num-
       ber  of  threads  that are active. This value also can be influenced by
       the mmaaxx__rreeaaddeerr__ddeellaayy parameter which can be defined as qqmmaasstteerr__ppaarraamm in
       the Univa Grid Engine global configuration (see _s_g_e___c_o_n_f(5))

       A  GDI  session  is a new configuration object in Univa Grid Engine 8.2
       which can be created, modified and deleted by managers  or  users  that
       are members of the sseessssiioonnuusseerrss access control list.


FFOORRMMAATT
       The sections below describe the format of the template file for session
       objects.  Via the _-_a_s_i, _-_A_s_i, _-_m_s_i, _-_M_s_i options of the  _q_c_o_n_f(1)  com-
       mand  session can be added and modified. The _-_c_s_i switch can be used to
       create a session with default parameters. Any of  these  change  opera-
       tions can be rejected by the Univa Grid Engine system, as a result of a
       failed integrity verification.

       _Q_c_o_n_f(1) _-_s_s_i_l will return a list of all existing sessions in an  Univa
       Grid  Engine  system.  Details  of a session are shown with the command
       _q_c_o_n_f(1) _-_s_s_i.

\) be used to escape newline
\newline) characters. The backslash and the newline are replaced with
 ) character before any interpretation.
       Note, Univa Grid Engine allows backslashes ((a space (.PP The following
       list of parameters specifies the session configuration file content:


   sseessssiioonn__iidd
       The  session  ID  of a session. For sessions that should be created the
       value for this attribute has to be NNOONNEE so that the _s_g_e___q_m_a_s_t_e_r(1) pro-
       cess can assign a new unique session ID.

   oowwnneerr
       User  name  of  the user that owns the session. If NNOONNEE is specified as
       username during the creation of a new session then the  executing  user
       of the configuration command will be the owner of that session.

       Only  managers and the session owner are allowed to modify or to delete
       an existing session and if a session gets created by root or a  manager
       account  on  behalf of a regular user then that user should be a member
       of the sseessssiioonnuusseerrss access control list.

   dduurraattiioonn
time in
       Duration of a session in a format as defined for .M sge_types 1 .

       The duration influences the lifetime of a session. Lifetime of  a  ses-
       sion begins when the session is created and it ends when the session is
       not used for the specified amount  of  time  defined  by  the  duration
       attribute.

       Lifetime  of a session is automatically increased by adding duration to
       the eenndd__ttiimmee of that session when it is used.

       The default duration of a session is 900 seconds if this is not  speci-
       fied  otherwise  in the qqmmaasstteerr__ppaarraamm named ggddii__rreeqquueesstt__sseessssiioonn__ttiimmeeoouutt
       (see _s_g_e___c_o_n_f(5))

       The _s_g_e___q_m_a_s_t_e_r(1) process tries to find sessions  where  the  lifetime
       ended every 15 minutes and it will delete those sessions automatically.
       Although unused sessions will be deleted  automatically  it  is  recom-
       mended to delete sessions manually using the _q_c_o_n_f(1) --ddssii command once
       a session is not needed anymore.

   ssttaarrtt__ttiimmee
       Time when the session was created. SSttaarrtt__ttiimmee of a  session  cannot  be
       specified.  It is shown with _q_c_o_n_f(1) _-_s_s_i.

   eenndd__ttiimmee
       Possible  end  time of a session. After creation the eenndd__ttiimmee of a ses-
       sion is set to ssttaarrtt__ttiimmee plus dduurraattiioonn. EEnndd__ttiimmee is moved forward when
       the  session  is  used so that it still remains valid for the amount of
       time specified by dduurraattiioonn after use.

       If the session was not  used  then  it  is  tagged  for  deletion.  The
       _s_g_e___q_m_a_s_t_e_r(1)  process  tries to find unused sessions every 15 minutes
       and it will delete those sessions automatically. Although  unused  ses-
       sions  will  be  deleted automatically it is recommended to delete ses-
       sions manually using the _q_c_o_n_f(1) _-_d_s_i command when a  session  is  not
       needed anymore.

       The  eenndd__ttiimmee  of  a session is shown by the commands _q_c_o_n_f(1) _-_s_s_i and
       _-_s_s_i_l.

SSEEEE AALLSSOO
       _s_g_e___i_n_t_r_o(1), _s_g_e_____t_y_p_e_s(1), _q_c_o_n_f(1),

CCOOPPYYRRIIGGHHTT
       See _s_g_e___i_n_t_r_o(1) for a full statement of rights and permissions.



Univa Grid Engine File Formats     UGE 8.4.4                   SESSION_CONF(5)
