.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "DRMAA2_LASTERROR_TEXT" "3" "June 2014" "Univa Corporation" "DRMAA2 C API"
.
.SH "NAME"
\fBdrmaa2_lasterror_text\fR \- drmaa2_lasterror_text, Returns the last error occurred within the thread\.
.
.SH "SYNOPSIS"
\fB#include "drmaa2\.h"\fR
.
.P
drmaa2_string drmaa2_lasterror_text(void)
.
.SH "DESCRIPTION"
Returns the last DRMAA2 related error happend within the thread the function has called\. Internally thread local storage is used by DRMAA2 functions for storing errors\. This function is usually called when a previous DRMAA2 function call failed resulting in returning a NULL value\. A numerical description of the error can be get by using the drmaa2_lasterror(3) call\.
.
.SH "RETURN VALUES"
Returns a copy of an unspecified string value describing the last error occurred\. If no error happend yet NULL is returned\. The \fBdrmaa2_string\fR must be freed from the calling function\.
.
.SH "EXAMPLE"
.
.nf

drmaa2_rsession rs = drmaa2_open_rsession(NULL);

if (rs == NULL) {
   if (drmaa2_listerror() == DRMAA2_UNSUPPORTED_OPERATION) {
      printf("Don\'t use reservations sessions again, they are not supported\.\en");
   } else {
      /* handle real error \.\.\. */
      drmaa2_error error = drmaa2_lasterror_text();
      printf("Following error happend while opening a reservation session: %s\en", error);
      drmaa2_string_free(&error);
   }
} else {
   /* Do something with the reservation session \.\.\. */
}
.
.fi
.
.SH "SEE ALSO"
drmaa2_lasterror(3)
.
.SH "AUTHOR"
Copyright Univa Corporation 2013
